# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\resources\MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QFileDialog
from PyQt5.QtCore import QStringListModel
from PyQt5.Qt import qRed, qGreen, qBlue, qRgb
import numpy


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 600))
        MainWindow.setMaximumSize(QtCore.QSize(800, 600))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.button1 = QtWidgets.QPushButton(self.centralwidget)
        self.button1.setGeometry(QtCore.QRect(360, 460, 75, 23))
        self.button1.setObjectName("button1")
        self.foto = QtWidgets.QLabel(self.centralwidget)
        self.foto.setGeometry(QtCore.QRect(30, 120, 251, 201))
        self.foto.setObjectName("foto")
        self.foto_2 = QtWidgets.QLabel(self.centralwidget)
        self.foto_2.setGeometry(QtCore.QRect(520, 120, 251, 201))
        self.foto_2.setObjectName("foto_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuArquivo = QtWidgets.QMenu(self.menubar)
        self.menuArquivo.setObjectName("menuArquivo")
        self.menuAjuda = QtWidgets.QMenu(self.menubar)
        self.menuAjuda.setObjectName("menuAjuda")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionAbrir = QtWidgets.QAction(MainWindow)
        self.actionAbrir.setObjectName("actionAbrir")
        self.actionSalvar = QtWidgets.QAction(MainWindow)
        self.actionSalvar.setObjectName("actionSalvar")
        self.actionSalvar_como = QtWidgets.QAction(MainWindow)
        self.actionSalvar_como.setObjectName("actionSalvar_como")
        self.actionSobre = QtWidgets.QAction(MainWindow)
        self.actionSobre.setObjectName("actionSobre")
        self.menuArquivo.addAction(self.actionAbrir)
        self.menuArquivo.addAction(self.actionSalvar)
        self.menuArquivo.addAction(self.actionSalvar_como)
        self.menuAjuda.addAction(self.actionSobre)
        self.menubar.addAction(self.menuArquivo.menuAction())
        self.menubar.addAction(self.menuAjuda.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.actionAbrir.triggered.connect(self.abrir)
        self.actionSobre.triggered.connect(self.sobre)

        self.button1.clicked.connect(self.converterCorParaCinza)
        # self.button1.clicked.connect(self.inverterCor)
        # self.button1.clicked.connect(self.apenasVermelho)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button1.setText(_translate("MainWindow", "←"))
        self.foto.setText(_translate("MainWindow", ""))
        self.foto_2.setText(_translate("MainWindow", ""))
        self.menuArquivo.setTitle(_translate("MainWindow", "Arquivo"))
        self.menuAjuda.setTitle(_translate("MainWindow", "Ajuda"))
        self.actionAbrir.setText(_translate("MainWindow", "Abrir"))
        self.actionSalvar.setText(_translate("MainWindow", "Salvar"))
        self.actionSalvar_como.setText(_translate("MainWindow", "Salvar como..."))
        self.actionSobre.setText(_translate("MainWindow", "Sobre"))

    def abrir(self):
            dlg = QFileDialog() # cria um dialogo para selecionar o arquivo
            dlg.setFileMode(QFileDialog.AnyFile) # seleciona qualquer tipo de arquivo
            # dlg.setFilter("Imagens (*.png *.jpg *.jpeg)") # filtra os arquivos
            # filenames = list # cria uma lista para armazenar os nomes dos arquivos

            filename = dlg.getOpenFileName() # abre o dialogo e armazena o nome do arquivo
            self.foto.setPixmap(QtGui.QPixmap(filename[0])) # coloca o conteudo do arquivo na textbox
            self.foto.setScaledContents(True) # ajusta o tamanho da imagem

    def converterCorParaCinza(self):
        # converts the image to grayscale bitwise using bits(). each pixel is a 3 by 1 vector. the first element is the red value, the second is the green value, and the third is the blue value. the value is between 0 and 255. the value of each element is multiplied by the corresponding weight. the sum of the three values is the final value for that pixel. 
        # luminancia = (r + g + b) / 3
        
        image = self.foto.pixmap().toImage()
        # arrayptr = image.bits()
        for x in range(image.width()):
            for y in range(image.height()):
                pixel = image.pixel(x, y)
                r = qRed(pixel)
                g = qGreen(pixel)
                b = qBlue(pixel)
                # luminancia = (r + g + b) / 3
                luminancia = r*0.299 + g*0.587 + b*0.114
                image.setPixel(x, y, qRgb(luminancia, luminancia, luminancia))
        self.foto_2.setPixmap(QtGui.QPixmap(image))
        self.foto_2.setScaledContents(True)

    def inverterCor(self):
        image = self.foto.pixmap().toImage()
        for x in range(image.width()):
            for y in range(image.height()):
                pixel = image.pixel(x, y)
                r = qRed(pixel)
                g = qGreen(pixel)
                b = qBlue(pixel)
                image.setPixel(x, y, qRgb(255-r, 255-g, 255-b))
        self.foto_2.setPixmap(QtGui.QPixmap(image))
        self.foto_2.setScaledContents(True)
        
    def apenasVermelho(self):
        image = self.foto.pixmap().toImage()
        for x in range(image.width()):
            for y in range(image.height()):
                pixel = image.pixel(x, y)
                r = qRed(pixel)
                g = qGreen(pixel)
                b = qBlue(pixel)
                image.setPixel(x, y, qRgb(r, 0, 0))
        self.foto_2.setPixmap(QtGui.QPixmap(image))
        self.foto_2.setScaledContents(True)

    def sobre(self):
        msg = QMessageBox()
        msg.setWindowTitle("Sobre")
        msg.setText("Projeto de conversão de imagens.")
        msg.setIcon(QMessageBox.Information)
        msg.setStandardButtons(QMessageBox.Ok)
        # msg.setDefaultButton(QMessageBox.Ok)
        msg.setInformativeText("Desenvolvido por Carlos Santana.")
        # msg.setDetailedText("Detailhes.")
        
        x = msg.exec_()   


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
